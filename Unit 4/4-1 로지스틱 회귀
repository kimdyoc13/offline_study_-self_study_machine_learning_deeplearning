{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMOWZ3mjGkIb8+htX9Yrmeh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"r7kECfxDV8jH","executionInfo":{"status":"ok","timestamp":1675052164981,"user_tz":-540,"elapsed":1126,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"c574b366-0df1-42ce-e147-14110462c58a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Species  Weight  Length  Diagonal   Height   Width\n","0   Bream   242.0    25.4      30.0  11.5200  4.0200\n","1   Bream   290.0    26.3      31.2  12.4800  4.3056\n","2   Bream   340.0    26.5      31.1  12.3778  4.6961\n","3   Bream   363.0    29.0      33.5  12.7300  4.4555\n","4   Bream   430.0    29.0      34.0  12.4440  5.1340"],"text/html":["\n","  <div id=\"df-252cbb44-e07f-4a42-9b99-09bca1378cad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Species</th>\n","      <th>Weight</th>\n","      <th>Length</th>\n","      <th>Diagonal</th>\n","      <th>Height</th>\n","      <th>Width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Bream</td>\n","      <td>242.0</td>\n","      <td>25.4</td>\n","      <td>30.0</td>\n","      <td>11.5200</td>\n","      <td>4.0200</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bream</td>\n","      <td>290.0</td>\n","      <td>26.3</td>\n","      <td>31.2</td>\n","      <td>12.4800</td>\n","      <td>4.3056</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bream</td>\n","      <td>340.0</td>\n","      <td>26.5</td>\n","      <td>31.1</td>\n","      <td>12.3778</td>\n","      <td>4.6961</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bream</td>\n","      <td>363.0</td>\n","      <td>29.0</td>\n","      <td>33.5</td>\n","      <td>12.7300</td>\n","      <td>4.4555</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Bream</td>\n","      <td>430.0</td>\n","      <td>29.0</td>\n","      <td>34.0</td>\n","      <td>12.4440</td>\n","      <td>5.1340</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-252cbb44-e07f-4a42-9b99-09bca1378cad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-252cbb44-e07f-4a42-9b99-09bca1378cad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-252cbb44-e07f-4a42-9b99-09bca1378cad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","fish = pd.read_csv('https://bit.ly/fish_csv_data')\n","fish.head() "]},{"cell_type":"markdown","source":["생선의 종류인 Species 를 제외 하고 5개의 열이 추가로 있다"],"metadata":{"id":"aPCDzfvNZaOe"}},{"cell_type":"markdown","source":["데이터 프레임이란 판다스에서 제공하는 2차원 표형식의 주요 데이터 구조입니다.    \n","열과 행으로 구성되어 있으며 통계와 메서드를 위한 메서드를 풍부하게 제공합니다.    \n","넘파이로 상호 변환이 쉽고 사이킷런과도 잘 호환됩니다"],"metadata":{"id":"_yAvT2BFYi1X"}},{"cell_type":"code","source":["print(pd.unique(fish['Species'])) #생선의 종류"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MfH2P7PnZIHV","executionInfo":{"status":"ok","timestamp":1675052164981,"user_tz":-540,"elapsed":9,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"a7f7954c-c2c8-4316-8f35-84eb96af43bf"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bream' 'Roach' 'Whitefish' 'Parkki' 'Perch' 'Pike' 'Smelt']\n"]}]},{"cell_type":"code","source":["fish_input = fish[['Weight', 'Length', 'Diagonal', 'Height', 'Width']].to_numpy()"],"metadata":{"id":"6VZ8ZEXAZOmW","executionInfo":{"status":"ok","timestamp":1675052164982,"user_tz":-540,"elapsed":7,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(fish_input[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TuQfbEZHZvTr","executionInfo":{"status":"ok","timestamp":1675052164982,"user_tz":-540,"elapsed":7,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"870d67a1-7f18-4907-9012-8c5c1a4aff18"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[242.      25.4     30.      11.52     4.02  ]\n"," [290.      26.3     31.2     12.48     4.3056]\n"," [340.      26.5     31.1     12.3778   4.6961]\n"," [363.      29.      33.5     12.73     4.4555]\n"," [430.      29.      34.      12.444    5.134 ]]\n"]}]},{"cell_type":"code","source":["fish_target = fish['Species'].to_numpy()"],"metadata":{"id":"4lZD00lDayrU","executionInfo":{"status":"ok","timestamp":1675052164982,"user_tz":-540,"elapsed":6,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","train_input, test_input, train_target, test_target = train_test_split (\n","    fish_input, fish_target, random_state = 42)"],"metadata":{"id":"tfRrBmMclHqt","executionInfo":{"status":"ok","timestamp":1675052166248,"user_tz":-540,"elapsed":1271,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler # 선형 회귀 표준화 전처리\n","ss = StandardScaler()\n","ss.fit(train_input)\n","train_scaled = ss.transform(train_input)\n","test_scaled = ss.transform(test_input)"],"metadata":{"id":"mdN393hIljBI","executionInfo":{"status":"ok","timestamp":1675052166248,"user_tz":-540,"elapsed":32,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier # k-최근접 이웃\n","kn = KNeighborsClassifier(n_neighbors = 3)\n","kn.fit(train_scaled, train_target)\n","print(kn.score(train_scaled, train_target))\n","print(kn.score(test_scaled, test_target))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IVztwH5cmZ7H","executionInfo":{"status":"ok","timestamp":1675052166249,"user_tz":-540,"elapsed":31,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"f06612b1-2e4f-45de-9bd8-4df7a0027576"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8907563025210085\n","0.85\n"]}]},{"cell_type":"markdown","source":["# 다중 분류\n","- 타깃 데이터에 2개 이상의 클래스가 포함된 문제"],"metadata":{"id":"Nt3VWkJim706"}},{"cell_type":"markdown","source":["# 이진 분류\n","- 머신러닝에서 여러 개의 종류(혹은 **클래스** 라고 부릅니다) 중 하나를 구별해 내는 문제를 분류라고 부릅니다.  \n","- 특히 이 장에서처럼 2개의 클래스 중 하나를 고르는 문제를 이진 분류라고 부릅니다. \n","- 여기에서의 클래스는 파이썬프로그램의 클래스와는 다릅니다. 혼동하지 마세요"],"metadata":{"id":"pKLopmPlnIxB"}},{"cell_type":"code","source":["print(kn.classes_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WPeVdfvWoCM1","executionInfo":{"status":"ok","timestamp":1675052166249,"user_tz":-540,"elapsed":29,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"dcd3d8ff-2526-4a24-bc6c-0e42bc3f7050"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n"]}]},{"cell_type":"code","source":["print(kn.predict(test_scaled[:5]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y-n2tNaSopgR","executionInfo":{"status":"ok","timestamp":1675052166249,"user_tz":-540,"elapsed":27,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"9ea6663d-a5b0-4c6d-ed5a-e3d2abc94983"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["['Perch' 'Smelt' 'Pike' 'Perch' 'Perch']\n"]}]},{"cell_type":"code","source":["import numpy as np\n","proba = kn.predict_proba(test_scaled[:5])\n","print(np.round(proba, decimals = 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CunlW7sao0Ah","executionInfo":{"status":"ok","timestamp":1675052166251,"user_tz":-540,"elapsed":28,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"6df20442-219b-4903-dc55-53bde004b15a"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.     0.     1.     0.     0.     0.     0.    ]\n"," [0.     0.     0.     0.     0.     1.     0.    ]\n"," [0.     0.     0.     1.     0.     0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n"]}]},{"cell_type":"code","source":["distances, indexes = kn.kneighbors(test_scaled[3:4])\n","print(train_target[indexes])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ms94qQIkpbhf","executionInfo":{"status":"ok","timestamp":1675052166251,"user_tz":-540,"elapsed":27,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"79a84d7a-656f-47e8-bbcb-ed0fd6f48c5e"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[['Roach' 'Perch' 'Perch']]\n"]}]},{"cell_type":"code","source":["print(distances)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xy8EHTXSpz-l","executionInfo":{"status":"ok","timestamp":1675052166252,"user_tz":-540,"elapsed":26,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"3d7757f0-102c-44ef-9232-e1e085d08760"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.20774583 0.24862983 0.33682411]]\n"]}]},{"cell_type":"code","source":["proba = kn.predict_proba(test_scaled[:10])\n","print(np.round(proba, decimals = 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hur-qwI2p7bZ","executionInfo":{"status":"ok","timestamp":1675052166252,"user_tz":-540,"elapsed":24,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"aaf84f43-814c-40bf-b78e-c643760ba4aa"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.     0.     1.     0.     0.     0.     0.    ]\n"," [0.     0.     0.     0.     0.     1.     0.    ]\n"," [0.     0.     0.     1.     0.     0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n"," [1.     0.     0.     0.     0.     0.     0.    ]\n"," [0.     0.     0.     0.     0.     1.     0.    ]\n"," [0.     0.     0.3333 0.     0.6667 0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n"," [0.     0.     0.     1.     0.     0.     0.    ]]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","proba = kn.predict_proba(test_scaled[:5])\n","print(np.round(proba, decimals = 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mF2T0_dHq9Mr","executionInfo":{"status":"ok","timestamp":1675052166252,"user_tz":-540,"elapsed":23,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"a9bff854-73f5-4555-807f-557aff5b3544"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.     0.     1.     0.     0.     0.     0.    ]\n"," [0.     0.     0.     0.     0.     1.     0.    ]\n"," [0.     0.     0.     1.     0.     0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n"," [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n"]}]},{"cell_type":"markdown","source":["# 로지스틱 회귀\n","- 회귀이지만 **분류** 문제이다.\n","- 이 알고리즘은 선형 회귀와 동일하게 선형 방정식을 학습합니다.\n","- z = a * (Weight) + b * (Length) + c * (Diagonal) + d * (Height) + e * (Width) + f\n","- 확률이 되려면 0 과 1 사이의 값이여야 한다. \n","- **시그모이드 함수**(**로지스틱 함수**) 를 사용할 수 있습니다"],"metadata":{"id":"8hBfuFDlq_sk"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","z = np.arange(-5, 5, 0.1)\n","phi = 1 / (1 + np.exp(-z))\n","plt.plot(z, phi)\n","plt.xlabel('z')\n","plt.ylabel('phi')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"QBngfn0Jr0V4","executionInfo":{"status":"ok","timestamp":1675052166252,"user_tz":-540,"elapsed":22,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"b6f647c3-4c54-469c-ac6c-39404eae487d"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["이진 분류의 경우 시그모이드 함수의 출력이 0.5 보다 크면 양성 클래스, 0.5 보다 작으면 음성 클래스로 판단 합니다.   \n","정확이 0.5 일경우 라이브러리 마다 다르지만, 사이킷 런은 음성 클래스로 판별합니다."],"metadata":{"id":"bT8_cPzltFtc"}},{"cell_type":"code","source":["char_arr = np.array(['A', 'B', 'C', 'D', 'E']) # 불리언 인덱싱\n","print(char_arr[[True, False, True, False, False]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-pRRLmn9tctb","executionInfo":{"status":"ok","timestamp":1675052166252,"user_tz":-540,"elapsed":21,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"d4e8d471-64b9-4994-b94f-91c87019e3cf"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["['A' 'C']\n"]}]},{"cell_type":"code","source":["print(test_scaled)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4fkInq2P7VMc","executionInfo":{"status":"ok","timestamp":1675052829332,"user_tz":-540,"elapsed":331,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"93e761ed-fede-451e-c6fa-828361f8390b"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.88741352 -0.91804565 -1.03098914 -0.90464451 -0.80762518]\n"," [-1.06924656 -1.50842035 -1.54345461 -1.58849582 -1.93803151]\n"," [-0.54401367  0.35641402  0.30663259 -0.8135697  -0.65388895]\n"," [-0.34698097 -0.23396068 -0.22320459 -0.11905019 -0.12233464]\n"," [-0.68475132 -0.51509149 -0.58801052 -0.8998784  -0.50124996]\n"," [ 1.70778862  0.79685229  0.98412932  2.49283113  1.31347159]\n"," [-1.08726098 -1.67709884 -1.70848587 -1.76175528 -2.01154694]\n"," [-0.60030873 -0.3089289  -0.29269143 -0.43855288 -0.33056738]\n"," [-0.57779071 -0.36515506 -0.44035097 -0.52577528 -0.17219833]\n"," [ 2.41147684  2.57734741  2.4694106   0.45038962  1.54627043]\n"," [ 0.72262512  0.46886634  0.64538096  1.38570915  0.7798447 ]\n"," [ 1.70778862  1.0779831   1.06230202  0.86222655  1.2659243 ]\n"," [ 0.58188748  0.32830094  0.51509312  1.62381742  0.6898706 ]\n"," [-0.68475132 -0.7962223  -0.77041348  0.0074865  -0.70436223]\n"," [ 0.86336276  0.60943175  0.80172635  1.82199404  0.69535682]\n"," [ 1.48260839  0.93741769  1.11441715  2.26561331  1.13260901]\n"," [ 1.70778862  1.40596904  1.2794484   0.92396381  2.25161618]\n"," [-0.49334812 -0.18710555 -0.28400558 -0.41845122 -0.18548719]\n"," [-0.47364485 -0.42138122 -0.50115196 -0.38758259 -0.44212064]\n"," [ 0.86336276  0.42201121  0.61063753  1.48117965  0.51028814]\n"," [-1.07881672 -1.56464651 -1.57819804 -1.64186151 -1.92900972]\n"," [ 0.610035    0.46886634  0.6366951   1.67197249  0.41787572]\n"," [ 0.30041219  0.2814458   0.44560628  1.20923936 -0.04894113]\n"," [ 0.30041219  0.20647759  0.42823457  1.32466334  0.31156486]\n"," [ 1.58112475  0.93741769  1.10573129  2.27724461  1.12389201]\n"," [ 1.98926391  1.35911391  1.23601913  0.90136798  1.80936543]\n"," [-0.62845626 -0.46823636 -0.54458124 -0.63897672 -0.44090148]\n"," [-0.34698097 -0.18710555 -0.17108946 -0.17708322 -0.12178601]\n"," [-1.0881054  -1.75206705 -1.77797271 -1.75918701 -2.07299266]\n"," [-1.0790982  -1.56464651 -1.57819804 -1.64186151 -2.00087927]\n"," [ 0.32855972  1.31225877  1.23601913 -0.50315475  0.00653071]\n"," [-0.90993155 -1.039869   -1.10916184 -1.05557977 -0.9185079 ]\n"," [-0.96200448 -1.15232133 -1.22207796 -1.0544932  -1.10741694]\n"," [ 0.48900063  1.64024472  1.5139665  -0.26435502  0.25706835]\n"," [-0.14994827 -0.18710555 -0.01474406  0.86810394  0.15106228]\n"," [-0.7691939  -0.60880176 -0.67486907 -0.67972332 -0.63444333]\n"," [-0.65660379 -0.56194663 -0.51852367 -0.45169057 -0.38280844]\n"," [-0.7691939  -0.70251203 -0.65749736 -0.67858735 -0.70344785]\n"," [-0.69882508 -0.6556569  -0.62275394  0.21581272 -0.78708232]\n"," [ 1.20113311  0.98427283  0.8712132   0.88131571  1.76968173]]\n"]}]},{"cell_type":"code","source":["bream_smelt_indexes = (train_target == 'Bream') | (train_target == 'Smelt')\n","train_bream_smelt = train_scaled[bream_smelt_indexes]\n","target_bream_smelt = train_target[bream_smelt_indexes]"],"metadata":{"id":"3umgurOJvonL","executionInfo":{"status":"ok","timestamp":1675052166253,"user_tz":-540,"elapsed":21,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression # 선형 회귀 모델\n","lr = LogisticRegression()\n","lr.fit(train_bream_smelt, target_bream_smelt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kigRvxT5wQhE","executionInfo":{"status":"ok","timestamp":1675052166253,"user_tz":-540,"elapsed":21,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"78a62cb7-fbef-48f7-d2da-4c7ae0b1029f"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["print(lr.predict(train_bream_smelt[:5])) # proba == probality"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OSMfDTlhxdrX","executionInfo":{"status":"ok","timestamp":1675052166253,"user_tz":-540,"elapsed":19,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"a3d6917b-cc9e-4409-99ff-a4dda45b7b5a"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bream' 'Smelt' 'Bream' 'Bream' 'Bream']\n"]}]},{"cell_type":"code","source":["print(lr.predict_proba(train_bream_smelt[:5]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-lL11zvyxmqy","executionInfo":{"status":"ok","timestamp":1675052166253,"user_tz":-540,"elapsed":18,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"48f0c0fa-6942-4142-97d1-0800e2d479f2"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.99759855 0.00240145]\n"," [0.02735183 0.97264817]\n"," [0.99486072 0.00513928]\n"," [0.98584202 0.01415798]\n"," [0.99767269 0.00232731]]\n"]}]},{"cell_type":"code","source":["print(lr.classes_) # 첫번째 열이 음성 클래스, 두번쨰 열이 양성 클래스   "],"metadata":{"id":"yrBcs2B3x15f","executionInfo":{"status":"ok","timestamp":1675053074940,"user_tz":-540,"elapsed":343,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"896dc30c-176e-4347-f36a-77b896e2f722"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bream' 'Smelt']\n"]}]},{"cell_type":"code","source":["# WHY 성공적으로 분류하것인가?\n","# 실제 데이터와 비교 했을때 맞아야지 성공적으로 분류한것이 아닌가? "],"metadata":{"id":"uWyYQ4a68YQD","executionInfo":{"status":"ok","timestamp":1675053477976,"user_tz":-540,"elapsed":335,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["print(lr.coef_, lr.intercept_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7VyIsWB996vP","executionInfo":{"status":"ok","timestamp":1675053495096,"user_tz":-540,"elapsed":339,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"e304721b-2c52-408d-c8ed-c10abdd46e1b"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.4037798  -0.57620209 -0.66280298 -1.01290277 -0.73168947]] [-2.16155132]\n"]}]},{"cell_type":"code","source":["decisions = lr.decision_function(train_bream_smelt[:5]) #decision_function 은 양성클래스에 대한 확률만 반환한다.\n","print(decisions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8ZcCDlmc9-6p","executionInfo":{"status":"ok","timestamp":1675053552475,"user_tz":-540,"elapsed":4,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"b200312f-517d-422b-f432-eebba5387c0b"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["[-6.02927744  3.57123907 -5.26568906 -4.24321775 -6.0607117 ]\n"]}]},{"cell_type":"code","source":["from scipy.special import expit\n","print(expit(decisions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PnvXHLQM-M8s","executionInfo":{"status":"ok","timestamp":1675055940112,"user_tz":-540,"elapsed":461,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"c5475bc0-e3a2-4ea4-f012-f88e17df208a"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]\n"]}]},{"cell_type":"markdown","source":["## 로지스틱 회귀로 다중 분류 수행하기"],"metadata":{"id":"kRBnm2YpHURr"}},{"cell_type":"code","source":["lr = LogisticRegression(C = 20, max_iter = 1000) #max_iter == 반복 횟수\n","lr.fit(train_scaled, train_target)\n","print(lr.score(train_scaled, train_target))\n","print(lr.score(test_scaled, test_target))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qXllax26-kKi","executionInfo":{"status":"ok","timestamp":1675054473850,"user_tz":-540,"elapsed":306,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"7bdd2d26-ff83-411e-d68e-a334efabcdae"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9327731092436975\n","0.925\n"]}]},{"cell_type":"markdown","source":["과대적합이나 과소적합은 아니다."],"metadata":{"id":"-LqEET77Ic4J"}},{"cell_type":"code","source":["print(lr.predict(test_scaled[:5]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y5UxDpUBBt4R","executionInfo":{"status":"ok","timestamp":1675054497441,"user_tz":-540,"elapsed":402,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"ef528869-9e36-4ee5-dfdd-c28873427cb8"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["['Perch' 'Smelt' 'Pike' 'Roach' 'Perch']\n"]}]},{"cell_type":"code","source":["proba = lr.predict_proba(test_scaled[:5])\n","print(np.round(proba, decimals = 3)) # 다중 분류일시 시그모이드 함수를 섹션을 열의 개수 만큼 나누는 건가.?"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BDLRsOjUBzns","executionInfo":{"status":"ok","timestamp":1675054548978,"user_tz":-540,"elapsed":319,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"9da27ebb-8fd3-4557-f18e-292dd03f8abe"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.    0.014 0.841 0.    0.136 0.007 0.003]\n"," [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n"," [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n"," [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n"," [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n"]}]},{"cell_type":"code","source":["print(lr.classes_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jrDzemj0CAOE","executionInfo":{"status":"ok","timestamp":1675054572486,"user_tz":-540,"elapsed":2,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"349ae4a1-f027-4908-d1b2-f937bb905942"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n"]}]},{"cell_type":"code","source":["print(lr.coef_.shape, lr.intercept_.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IZTLnbE2CF88","executionInfo":{"status":"ok","timestamp":1675054600639,"user_tz":-540,"elapsed":334,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"997c05d7-d712-4d9d-a2f0-f79e4d00e013"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["(7, 5) (7,)\n"]}]},{"cell_type":"code","source":["decision = lr.decision_function(test_scaled[:5])\n","print(np.round(decision, decimals = 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sq_Fl84FCM0s","executionInfo":{"status":"ok","timestamp":1675054667256,"user_tz":-540,"elapsed":323,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"d8021c39-bbd5-430d-f812-5f024adbda3f"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ -6.5    1.03   5.16  -2.73   3.34   0.33  -0.63]\n"," [-10.86   1.93   4.77  -2.4    2.98   7.84  -4.26]\n"," [ -4.34  -6.23   3.17   6.49   2.36   2.42  -3.87]\n"," [ -0.68   0.45   2.65  -1.19   3.26  -5.75   1.26]\n"," [ -6.4   -1.99   5.82  -0.11   3.5   -0.11  -0.71]]\n"]}]},{"cell_type":"code","source":["from scipy.special import softmax\n","proba = softmax(decision, axis = 1)\n","print(np.round(proba, decimals = 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aGlRm_-6Cc7X","executionInfo":{"status":"ok","timestamp":1675056778509,"user_tz":-540,"elapsed":849,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"b7162661-1927-49fa-bcb7-53046007936e"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.    0.014 0.841 0.    0.136 0.007 0.003]\n"," [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n"," [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n"," [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n"," [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n"]}]},{"cell_type":"code","source":["# test_scaled  = \"Species\" 값을 지니고 있는 StandardScaler 된 값 "],"metadata":{"id":"rRb8TbLpDFrs","executionInfo":{"status":"ok","timestamp":1675057578055,"user_tz":-540,"elapsed":315,"user":{"displayName":"김동영","userId":"10061777282338816168"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["print(test_target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5E3radXKNjvi","executionInfo":{"status":"ok","timestamp":1675057584825,"user_tz":-540,"elapsed":342,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"df0ba0eb-a47c-41a6-d789-06c89cb51a3e"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["['Perch' 'Smelt' 'Pike' 'Whitefish' 'Perch' 'Bream' 'Smelt' 'Roach'\n"," 'Perch' 'Pike' 'Bream' 'Whitefish' 'Bream' 'Parkki' 'Bream' 'Bream'\n"," 'Perch' 'Perch' 'Perch' 'Bream' 'Smelt' 'Bream' 'Bream' 'Bream' 'Bream'\n"," 'Perch' 'Perch' 'Whitefish' 'Smelt' 'Smelt' 'Pike' 'Perch' 'Perch' 'Pike'\n"," 'Bream' 'Perch' 'Roach' 'Roach' 'Parkki' 'Perch']\n"]}]}]}