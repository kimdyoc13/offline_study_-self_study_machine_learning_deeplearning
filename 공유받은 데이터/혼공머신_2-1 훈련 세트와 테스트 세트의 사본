{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1tqvUpMELxfBle9bUN14rJwtyjI2HWZ2D","timestamp":1672641335116}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **02-1 훈련 세트와 테스트 데이터**"],"metadata":{"id":"WbXYzFk7M-Kd"}},{"cell_type":"markdown","source":["## 학습 목표\n","- 지도 학습과 비지도 학습의 차이를 배운다.\n","- 모델을 훌녈시키는 훈련 세트와 모델을 평가하기 위한 테스트 세트로 데이터를 나눠서 학습해 본다."],"metadata":{"id":"uLxzSEfHNIxn"}},{"cell_type":"markdown","source":["## 보고서\n","- 문제: 도미(35마리)와 빙어(14마리) 구분하기\n","- 사용 알고리즘:k-최근접 이웃\n","- 작동 방식: 샘플을 저장하고 가장 가까운 이웃을 찾음\n","- 정확도:100%"],"metadata":{"id":"re4HZx09Nl2k"}},{"cell_type":"markdown","source":["##학습 데이터\n","- 도미와 빙어"],"metadata":{"id":"ZIvCXF57PsA-"}},{"cell_type":"markdown","source":["## 지도 학습과 비지도 학습\n","- 머신러닝 알고리즘은 크게 지도 학습과 비지도 학습으로 나눌 수 있다.\n","- 지도 학습 알고리즘은 훈련하기 위한 데이터와 정답이 필요하다.\n","- 정답(타깃)이 있으니 알고리즘이 정답을 맞히는 것을 학습한다.\n","- 입력 데이터만 있을 때는 비지도 학습 알고리즘을 사용한다.\n","- 데이터와 정답을 ***입력***과 ***타깃***이라고 한다.\n","- 이 둘을 합쳐 ***훈련 데이터***라고 부른다.\n","- 입력으로 사용된 것을 ***특성***이라고 한다."],"metadata":{"id":"lG9hfV6KPfaV"}},{"cell_type":"markdown","source":["##훈련 세트와 테스트 세트\n","- 머신러닝 알고리즘의 성능을 제대로 평하가려면 훈련 데이터와 평가에 사용할 데이터가 각각 달라져야 한다.\n","- 평가를 위해 다른 데이터를 준비하거나 이미 준비된 데이터 중에서 일부를 떼어내어 활용한다.\n","- 일반적으로 후자를 많이 따른다.\n","- 평가에 사용하는 데이터를 ***테스트 세트***, 훈련에 사용되는데이터를 ***훈련 세트***라고 부른다."],"metadata":{"id":"81wKfyWZRMtl"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Efeq4Q8rMsy5"},"outputs":[],"source":["# 도미와 빙어의 데이터를 합친 리스트\n","# 생선의 길이와 무게를 위한 리스트\n","\n","fish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, \n","                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, \n","                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, \n","                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\n","fish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, \n","                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, \n","                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, \n","                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]            "]},{"cell_type":"code","source":["# 2차원 리스트로 만들기\n","fish_data = [[l, w] for l, w in zip(fish_length, fish_weight)]\n","fish_target = [1]*35 + [0]*14"],"metadata":{"id":"cxx9STRgM9A7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 이때 하나의 생선 데이터를 ***샘플***이라고 부른다."],"metadata":{"id":"6-ee_OtNZVP5"}},{"cell_type":"markdown","source":["- 이 데이터의 처음 35개를 훈련 세트로, 나머지 14개를 테스트 세트로 사용한다."],"metadata":{"id":"ErFYe-ZrZypR"}},{"cell_type":"code","source":["# KNeitborsClassifier 클래스를 임포트하고 모델 객체를 만든다.\n","\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","kn = KNeighborsClassifier()"],"metadata":{"id":"nfPMofgBZ9_X"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 이제 전체 데이터에서 처음 35개를 선택해야 한다.\n","- 일반적으로 리스트 처럼 배열의 요소를 선택할 때는 배열의 위치, 즉 ***인덱스***를 지정한다."],"metadata":{"id":"dnRBik8KalHw"}},{"cell_type":"code","source":["# 예를 들어 fish_data의 다섯 번째 샘플을 출력하기\n","\n","print(fish_data[4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r8VetlTWaLZj","executionInfo":{"status":"ok","timestamp":1672641715281,"user_tz":-540,"elapsed":426,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"6404e2bb-0fe0-4173-a1d0-546534b4b436"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[29.0, 430.0]\n"]}]},{"cell_type":"markdown","source":["- 파이썬 리스트는 인덱스 외에도 ***슬라이싱***이라는 특별한 연산자를 제공한다.\n","- 슬라이신은 콜론(:)을 가운데 두고 인덱스의 범위를 지정하여 여러 개의 원소를 선택할 수 있다.\n","- 슬라이싱을 사용할 때는 **마지막 인덱스의 원소는 포함되지 않는다.**"],"metadata":{"id":"6i1Ttud-bLcy"}},{"cell_type":"code","source":["# 예를 들어 첫 번째부터 다섯 번째까지의 셈플을 선택하기\n","\n","print(fish_data[0:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bWNSJt6XbYwB","executionInfo":{"status":"ok","timestamp":1672641715282,"user_tz":-540,"elapsed":35,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"39b9dfd6-e353-4955-9b47-0b93e6ac4be7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n"]}]},{"cell_type":"code","source":["# 처음부터 시작되는 슬라이싱의 경우 0을 생략하고 쓸 수 있다.\n","\n","print(fish_data[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ov9TF3ujb8rj","executionInfo":{"status":"ok","timestamp":1672641715283,"user_tz":-540,"elapsed":34,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"1b697ce6-afc5-4f53-9552-bdd3f7e237e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n"]}]},{"cell_type":"code","source":["# 마지막 원소까지 포함할 경우 두번째 인텍스를 생략할 수 있다.\n","# 예를 들어 마지막 5개의 샘플을 출력하기\n","\n","print(fish_data[44:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vBukT9ArcWE-","executionInfo":{"status":"ok","timestamp":1672641715284,"user_tz":-540,"elapsed":31,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"681ce679-2885-447d-9656-87cd2d07089b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[12.2, 12.2], [12.4, 13.4], [13.0, 12.2], [14.3, 19.7], [15.0, 19.9]]\n"]}]},{"cell_type":"code","source":["# 처음 35개와 나머지 14개를 선택하기\n","\n","train_input = fish_data[:35]\n","train_target = fish_target[:35]\n","\n","test_input = fish_data[35:]\n","test_target = fish_target[35:]"],"metadata":{"id":"ouSk_8_zcmeW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 데이터를 준비했으니 훈련 세트로 `fit()` 메서드를 호출해 모델을 훈련하고, \n","테스트 세트로 `score()` 메서드를 호출해 평가해 본다."],"metadata":{"id":"As5KVy8wc1Qm"}},{"cell_type":"code","source":["kn.fit(train_input, train_target)\n","kn.score(test_input, test_target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U3qd6o19dN-D","executionInfo":{"status":"ok","timestamp":1672641715285,"user_tz":-540,"elapsed":28,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"3369e1ff-7bac-456f-98b1-ed1cd079c826"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["##샘플링 편향\n","- 왜 정확도가 0.0으로 나왔을까?\n","- 훈련 세트에는 도미만 들어있고 테스트 세트에는 빙어만 있기 때문이다.\n","- 일반적으로 훈련 세트와 테스트 세트에 샘플이 골고루 섞여 있지 않으면 샘플링이 한쪽으로 치우쳤다는 의미로 ***샘플링 편향***이라고 부른다."],"metadata":{"id":"LqlXxBEQdgXW"}},{"cell_type":"markdown","source":["##넘파이\n","- ***넘파이***는 파이썬의 대표적인 배열 라이브러리이다.\n","- 파이썬의 리스트로 2차원 리스트를 표현할 수 있지만 고차원 리스트를 표현하려면 매우 번거롭다.\n","- 넘파이는 고차원의 배열을 손쉽게 만들고 조작할 수 있는 간편한 도구를 많이 제공한다."],"metadata":{"id":"lhWGY-0ufSp8"}},{"cell_type":"code","source":["# 넘파이 라이브러리 임포트하기\n","\n","import numpy as np"],"metadata":{"id":"7dfOGH0Nj5cU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 파이썬 리스트를 넘파이 배열로 바꾼다.\n","- 넘파이 `array()` 함수에 파이썬 리스트를 전달한다."],"metadata":{"id":"dKJJ2dafkGT3"}},{"cell_type":"code","source":["input_arr = np.array(fish_data)\n","target_arr = np.array(fish_target)"],"metadata":{"id":"XEM06H2zkRwE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# input_arr 배열을 출력하기\n","\n","print(input_arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7o0S6AKakYta","executionInfo":{"status":"ok","timestamp":1672641715286,"user_tz":-540,"elapsed":25,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"3f3a5351-782c-4456-dbd4-57ab29cda9fb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[  25.4  242. ]\n"," [  26.3  290. ]\n"," [  26.5  340. ]\n"," [  29.   363. ]\n"," [  29.   430. ]\n"," [  29.7  450. ]\n"," [  29.7  500. ]\n"," [  30.   390. ]\n"," [  30.   450. ]\n"," [  30.7  500. ]\n"," [  31.   475. ]\n"," [  31.   500. ]\n"," [  31.5  500. ]\n"," [  32.   340. ]\n"," [  32.   600. ]\n"," [  32.   600. ]\n"," [  33.   700. ]\n"," [  33.   700. ]\n"," [  33.5  610. ]\n"," [  33.5  650. ]\n"," [  34.   575. ]\n"," [  34.   685. ]\n"," [  34.5  620. ]\n"," [  35.   680. ]\n"," [  35.   700. ]\n"," [  35.   725. ]\n"," [  35.   720. ]\n"," [  36.   714. ]\n"," [  36.   850. ]\n"," [  37.  1000. ]\n"," [  38.5  920. ]\n"," [  38.5  955. ]\n"," [  39.5  925. ]\n"," [  41.   975. ]\n"," [  41.   950. ]\n"," [   9.8    6.7]\n"," [  10.5    7.5]\n"," [  10.6    7. ]\n"," [  11.     9.7]\n"," [  11.2    9.8]\n"," [  11.3    8.7]\n"," [  11.8   10. ]\n"," [  11.8    9.9]\n"," [  12.     9.8]\n"," [  12.2   12.2]\n"," [  12.4   13.4]\n"," [  13.    12.2]\n"," [  14.3   19.7]\n"," [  15.    19.9]]\n"]}]},{"cell_type":"markdown","source":["- 배열의 크기를 알려주는 `shape` 속성을 제공한다."],"metadata":{"id":"uycngRw1koxT"}},{"cell_type":"code","source":["# 이 명령어를 사용하면 (샘플 수, 특성 수)를 출력한다.\n","print(input_arr.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MmgzFCkXkzTy","executionInfo":{"status":"ok","timestamp":1672641715287,"user_tz":-540,"elapsed":23,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"5de7e21f-e9c0-4f2f-fe99-91150724fbf4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(49, 2)\n"]}]},{"cell_type":"markdown","source":["- 이 배열에서 랜덤하게 샘플을 선택해 훈련 세트와 테스트 세트로 만들 차례이다.\n","- 배열을 섞은 후 나누는 방식 대신 무작위로 샘플을 고르는 방법을 사용한다.\n","- 한 가지 주의할 점은 `input_arr`와 `target_arr`에서 같은 위치는 함께 선택되어야 한다는 점이다.\n","- 그러려면 훈련 세트와 테스트 세트로 나눌 인덱스값을 잘 기억해야 한다.\n","- 아예 인덱스를 섞은 다음 `input_arr`와 `target_arr`에서 샘플을 선택하면 무작위로 훈련 세트를 나누는 셈이 된다."],"metadata":{"id":"qM_PENNblEFw"}},{"cell_type":"markdown","source":["- 넘파이 `arange()` 함수를 사용하면 0에서부터 48까지 1씩 증가하는 인덱스를 간단히 만들 수 있다.\n","- 그 다음 `shuffle() `함수로 인덱스를 랜덤하게 섞는다."],"metadata":{"id":"btdUxiKHmcbB"}},{"cell_type":"code","source":["# 일정한 값을 얻기 위해 랜덤 시드를 42로 지정\n","\n","np.random.seed(42)\n","index = np.arange(49)\n","np.random.shuffle(index)"],"metadata":{"id":"pF_EtPj7n4St"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5L1wWwghoeep","executionInfo":{"status":"ok","timestamp":1672641715288,"user_tz":-540,"elapsed":21,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"60a59c99-8e2b-4e6f-8634-fd95e8ccb4a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[13 45 47 44 17 27 26 25 31 19 12  4 34  8  3  6 40 41 46 15  9 16 24 33\n"," 30  0 43 32  5 29 11 36  1 21  2 37 35 23 39 10 22 18 48 20  7 42 14 28\n"," 38]\n"]}]},{"cell_type":"markdown","source":["- 전체 데이터를 훈련 세트와 테스트 세트로 나눈다.\n","- 넘파이는 슬라이싱 외에 ***배열 인덱싱***이란 기능을 제공한다.\n","- 배열 인덱싱은 1개의 인덱스가 아닌 여러 개의 인덱스로 한번에 여러 개의 원소를 선택할 수 있다."],"metadata":{"id":"q8-nUcDPojiU"}},{"cell_type":"code","source":["# 예를 들어 input_arr에서 두번째와 네번째 샘플을 선택하여 출력하기\n","\n","print(input_arr[[1,3]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fHHouDY3ohcd","executionInfo":{"status":"ok","timestamp":1672641715288,"user_tz":-540,"elapsed":19,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"a5e1d585-aa7b-44f4-d426-c6e0d306eda7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 26.3 290. ]\n"," [ 29.  363. ]]\n"]}]},{"cell_type":"markdown","source":["- 위와 비슷한 방식으로 리스트 대신 넘파이 배열을 인덱스로 전달할 수 있다.\n","- 앞서 만든 index 배열의 처음 35개를 `input_arr`와 `target_arr`에 전달하여 랜덤하게 35개의 샘플을 훈련 세트로 만든다."],"metadata":{"id":"MF1vUY3npXvY"}},{"cell_type":"code","source":["train_input = input_arr[index[:35]]\n","train_target = target_arr[index[:35]]"],"metadata":{"id":"vzNgHl9apFNJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 만들어진 index의 첫 번째 값은 13이다.\n","- 따라서 train_input의 첫 번째 원소는 input_arr의 열네 번째 원소가 들어 있을 것이다."],"metadata":{"id":"V7g9Ue6pqJWv"}},{"cell_type":"code","source":["print(input_arr[13], train_input[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tnq0ZmbUp3IV","executionInfo":{"status":"ok","timestamp":1672641715289,"user_tz":-540,"elapsed":18,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"8e025b6b-1dd4-4581-9f8b-e17cb9f37f40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 32. 340.] [ 32. 340.]\n"]}]},{"cell_type":"markdown","source":["- 나머지 14개를 테스트 세트로 만든다."],"metadata":{"id":"cp_LCXE9qlyP"}},{"cell_type":"code","source":["test_input = input_arr[index[35:]]\n","test_target = target_arr[index[35:]]"],"metadata":{"id":"O4LG7x1-qetW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 훈련 세트와 테스트 세트에 도미와 빙어가 잘 섞여 있는지 산점도를 그려 본다."],"metadata":{"id":"TTha24Heqtbi"}},{"cell_type":"code","source":["# 파란색이 훈련 세트, 주황색이 테스트 세트\n","\n","import matplotlib.pyplot as plt\n","\n","plt.scatter(train_input[:, 0], train_input[:, 1])\n","plt.scatter(test_input[:, 0], test_input[:, 1])\n","plt.xlabel('length')\n","plt.ylabel('weight')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"a17fTwOOqsHm","executionInfo":{"status":"ok","timestamp":1672641715721,"user_tz":-540,"elapsed":447,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"803bbcc9-c88d-4dee-da7f-deb0a9f7bc09"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["- 양쪽에 도미와 빙어가 모두 섞여 있는 것을 확인할 수 있다."],"metadata":{"id":"X7VSx9XTrqzg"}},{"cell_type":"markdown","source":["## 두 번째 머신러닝 프로그램\n","- 앞서 만든 훈련 세트와 테스트 세트로 k-최근접 이웃 모델을 훈련시켜 본다."],"metadata":{"id":"vKCqO7JWrvMi"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","\n","kn = KNeighborsClassifier()"],"metadata":{"id":"DAaUWRz8sMk_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- `fit()` 매서드를 활용해 훈련시킨다.\n","- 인덱스를 섞어 만든 `train_input`과` train_target`으로 모델을 훈련시킨다."],"metadata":{"id":"ZsZoT-Z_sVIP"}},{"cell_type":"code","source":["kn.fit(train_input, train_target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dCfWNKH0q18J","executionInfo":{"status":"ok","timestamp":1672641715722,"user_tz":-540,"elapsed":20,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"1dbacede-9cda-481d-b582-1016a3a25ec7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["- `test_input`과 `test_target`으로 이 모델을 테스트 한다."],"metadata":{"id":"T1s8nCuvswQR"}},{"cell_type":"code","source":["kn.score(test_input, test_target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fD0guOLDs7sB","executionInfo":{"status":"ok","timestamp":1672641715722,"user_tz":-540,"elapsed":18,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"1f1d7460-4173-4b31-fba2-4ab72de83b74"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["- 테스트 세트에 있는 모든 생선을 맞혔다."],"metadata":{"id":"6Yw3QOAhsQHy"}},{"cell_type":"markdown","source":["- `predict()` 매서드로 테스트 세트의 예측 결과와 실제 타깃을 확인해 본다."],"metadata":{"id":"GiClVnlvteCO"}},{"cell_type":"code","source":["kn.predict(test_input)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JabtMQXqtesZ","executionInfo":{"status":"ok","timestamp":1672641715723,"user_tz":-540,"elapsed":16,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"5974f481-5265-4868-ef2e-169e12a12a08"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["test_target"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"apHm_-HXts1F","executionInfo":{"status":"ok","timestamp":1672641715724,"user_tz":-540,"elapsed":15,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"dc3d21e0-7870-4861-c320-91c60dbfa7b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["- 예측 결과가 정답과 일치한다."],"metadata":{"id":"z2JYrt6UuGwA"}},{"cell_type":"markdown","source":["##훈련 모델 평가\n","- 모델을 훈련할 때 사용한 데이터로 모델의 성능을 평가하는 것은 이상하다.\n","- 공정하게 점수를 매기기 위해서는 훈련에 참여하지 않은 샘플을 사용해야 한다.\n","- 이 때문에 훈련 데이터를 훈련 세트와 테스트 세트로 나누었다.\n","- 훈련 세트로는 모델을 훈련하고 테스트 세트로는 모델을 평가했다.\n","- 하지만 데이터 세트를 그냥 무작정 나누어서는 안되고 골고루 섞어 나누어야 한다.\n","- 이를 위해 파이썬의 다차원 배열 라이브러리인 넘파이를 사용했다.\n","- 넘파이의 `shuffle()` 함수를 사용해 인덱스를 섞었다."],"metadata":{"id":"-7lgSURfuLZA"}},{"cell_type":"markdown","source":["##마무리"],"metadata":{"id":"0J1SyVk7vk8_"}},{"cell_type":"markdown","source":["###키워드로 끝내는 핵심 포인트\n","- ***지도 학습***은 입력과 타깃을 전달하여 모델을 훈련한 다음 새로운 데이터를 예측하는 데 활용한다. 1장에서부터 사용한 k-최근접 이웃이 지도 학습 알고리즘이다.\n","- ***비지도 학습***은 타깃 데이터가 없다. 따라서 무엇을 예측하는 것이 아니라 입력 데이터에서 어떤 특징을 찾는 데 주로 활용한다.\n","- ***훈련 세트***는 모델을 훈련할 때 사용하는 데이터이다. 보통 훈련 세트가 클수록 좋다. 따라서 테스트 세트를 제외한 모든 데이터를 사용한다.\n","- ***테스트 세트***는 전체 데이터에서 20~30%를 테스트 세트로 사용하는 경우가 많다. 전체 데이터가 아주 크다면 1%만 덜어내도 충분할 수 있다."],"metadata":{"id":"k_awHYWZvqEH"}},{"cell_type":"markdown","source":["###핵심 패키지와 함수\n","<u>numpy</u><br>\n","- `seed()`는 넘파이에서 난수를 생성하기 위한 정수 초깃값을 지정한다. 초깃값이 같으면 동일한 난수를 뽑을 수 있다. 따라서 랜덤 함수의 결과를 동일하게 재현하고 싶을 때 사용한다.\n","-` arrange()`는 일정한 간격의 정수 또는 실수 배열을 만든다. 기본 간격은 1이다. 매개변수가 하나이면 종료 숫자를 의미한다. 0에서 종료 숫자까지 배열을 만든다. 종료 숫자는 배열에 포함되지 않는다."],"metadata":{"id":"P833kiihwUHy"}},{"cell_type":"code","source":["print(np.arange(3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5h-XLYd5xrrt","executionInfo":{"status":"ok","timestamp":1672641715724,"user_tz":-540,"elapsed":14,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"f93d1eeb-a11b-4c13-ee0e-77915743f22a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2]\n"]}]},{"cell_type":"code","source":["# 매개변수가 2개면 시작 숫자, 종료 숫자를 의미한다.\n","\n","print(np.arange(1, 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"spwlLZwuxudH","executionInfo":{"status":"ok","timestamp":1672641715725,"user_tz":-540,"elapsed":13,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"8dbb6cc3-1c3a-45bc-c21c-d317d1bbb181"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2]\n"]}]},{"cell_type":"code","source":["# 매개변수가 3개면 마지막 매개변수가 간격을 나타낸다.\n","\n","print(np.arange(1, 3, 0.2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MCVqWFeox4JG","executionInfo":{"status":"ok","timestamp":1672641715725,"user_tz":-540,"elapsed":12,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"e6d83dee-c076-4eeb-fa89-5ca4aeb064d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.  1.2 1.4 1.6 1.8 2.  2.2 2.4 2.6 2.8]\n"]}]},{"cell_type":"code","source":["# shuffle()은 주어진 배열을 랜덤하게 섞는다.\n","# 다차원 배열일 경우 첫 번째 축(행)에 대해서만 섞는다.\n","\n","arr = np.array([[1, 2], [3, 4], [5, 6]])\n","np.random.shuffle(arr)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PYjVuR9eyA_0","executionInfo":{"status":"ok","timestamp":1672641715725,"user_tz":-540,"elapsed":10,"user":{"displayName":"김동영","userId":"10061777282338816168"}},"outputId":"d6430c6f-4d29-4dfe-89d3-acbc65a3cbda"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 6]\n"," [1 2]\n"," [3 4]]\n"]}]},{"cell_type":"markdown","source":["## 확인 문제"],"metadata":{"id":"VyQ9CMOuylLA"}},{"cell_type":"markdown","source":["1. 머신러닝 알고리즘의 한 종류로서 샘플의 입력과 타깃(정답)을 알고 있을 때 사용할 수 있는 학습 방법은 무엇인가요?\n","\n","① 지도학습<br>\n","② 비지도 학습<br>\n","③ 차원 축소<br>\n","④ 강화 학습\n","\n","2. 훈련 세트와 테스트 세트가 잘못 만들어져 전체 데이터를 대표하지 못하는 현상을 무엇이라고 부르나요?\n","\n","① 샘플링 오류<br>\n","② 샘플링 실수<br>\n","③ 샘플링 편차<br>\n","④ 샘플링 편향\n","\n","3. 사이킷런은 입력 데이터(배열)가 어떻게 구정되어 있을 것으로 기대되나요?\n","\n","① 행:특성, 열:샘플<br>\n","② 행:샘플, 열:특성<br>\n","③ 행:특성, 열:타깃<br>\n","④ 행:타깃, 열:특성"],"metadata":{"id":"CkNwlgmVyuYq"}}]}